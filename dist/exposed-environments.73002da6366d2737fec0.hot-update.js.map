{"version":3,"file":"exposed-environments.73002da6366d2737fec0.hot-update.js","mappings":"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","sources":["webpack://console-gitops-plugin/./components/list/GitOpsList.tsx","webpack://console-gitops-plugin/./components/list/GitOpsTableRow.tsx"],"sourcesContent":["import * as React from 'react';\n// import { useTranslation } from 'react-i18next';\n// import { Table, TextFilter } from '@console/internal/components/factory';\n// import { fuzzyCaseInsensitive } from '@console/internal/components/factory/table-filters';\n// import { VirtualizedTable } from '@openshift-console/dynamic-plugin-sdk';\nimport { TableComposable, Tbody, InnerScrollContainer, OuterScrollContainer, Td } from '@patternfly/react-table';\nimport GitOpsEmptyState from '../GitOpsEmptyState';\nimport { GitOpsTableHeader } from './GitOpsTableHeader';\nconst { Table, TextFilter } = require('@console/internal/components/factory');\nconst fuzzyCaseInsensitive = require('@console/internal/components/factory/table-filters');\nconst GitOpsTableRow = require('./GitOpsTableRow');\nconst GitOpsList = ({ appGroups, emptyStateMsg }) => {\n    // const { t } = useTranslation();\n    const [textFilter, setTextFilter] = React.useState('');\n    const visibleItems = appGroups === null || appGroups === void 0 ? void 0 : appGroups.filter(({ name }) => {\n        return fuzzyCaseInsensitive(textFilter, name);\n    });\n    const hasSyncStatus = (appGroups === null || appGroups === void 0 ? void 0 : appGroups.some(({ sync_status }) => sync_status /* eslint-disable-line @typescript-eslint/camelcase */)) || false;\n    return (React.createElement(\"div\", { className: \"gop-gitops-list\" },\n        appGroups.map((a) => a && (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", null,\n                a.name,\n                \" \",\n                a.repo_url)))),\n        !emptyStateMsg && appGroups ? (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { className: \"co-m-pane__filter-row\" },\n                React.createElement(TextFilter, { value: textFilter, label: 'by name', \n                    // label={t('gitops-plugin~by name')}\n                    onChange: (val) => setTextFilter(val) })),\n            React.createElement(OuterScrollContainer, null,\n                React.createElement(InnerScrollContainer, null,\n                    React.createElement(TableComposable, { \"aria-label\": \"Applications table\", variant: \"compact\", isStickyHeader: true },\n                        React.createElement(GitOpsTableHeader\n                        // onSort={onSort}\n                        // sortDirection={activeSortDirection}\n                        // sortIndex={activeSortIndex}\n                        , { \n                            // onSort={onSort}\n                            // sortDirection={activeSortDirection}\n                            // sortIndex={activeSortIndex}\n                            hasSyncStatus: hasSyncStatus }),\n                        React.createElement(Tbody, null, appGroups.map(app => {\n                            (React.createElement(React.Fragment, null,\n                                React.createElement(Td, { key: app.name },\n                                    React.createElement(\"div\", null,\n                                        React.createElement(\"span\", null, app.name))),\n                                React.createElement(Td, { width: 10 },\n                                    React.createElement(\"div\", null, app.repo_url)),\n                                React.createElement(Td, null, app.sync_status),\n                                React.createElement(Td, null, app.last_deployed)));\n                        }))))),\n            React.createElement(Table, { data: visibleItems, \"aria-label\": 'Environments table', \n                // aria-label={t('gitops-plugin~Environments table')}\n                Header: GitOpsTableHeader(hasSyncStatus), Row: GitOpsTableRow, loaded: !emptyStateMsg, virtualize: true }))) : (React.createElement(GitOpsEmptyState, { emptyStateMsg: emptyStateMsg }))));\n};\nexport default GitOpsList;\n","// import * as React from 'react';\n// import { Flex, FlexItem, Split, SplitItem } from '@patternfly/react-core';\n// import * as classNames from 'classnames';\n// import { useTranslation } from 'react-i18next';\n// import { Link } from 'react-router-dom';\n// import { routeDecoratorIcon } from '@console/dev-console/src/components/import/render-utils';\n// import { RowFunctionArgs, TableData } from '@console/internal/components/factory';\n// import { ExternalLink, Timestamp } from '@console/internal/components/utils';\n// import {\n//   GreenCheckCircleIcon,\n//   YellowExclamationTriangleIcon,\n//   GrayUnknownIcon,\n// } from '@console/shared';\n// import { GitOpsAppGroupData } from '../utils/gitops-types';\n// import GitOpsSyncFragment from './GitOpsSyncFragment';\n// import './GitOpsTableRow.scss';\n// const tableColumnClasses = [\n//   classNames('pf-m-width-20'), // Application name\n//   classNames('pf-m-width-30'), // Git repository\n//   classNames('pf-m-hidden', 'pf-m-visible-on-md', 'pf-m-width-20'), // Environments\n//   classNames('pf-m-hidden', 'pf-m-visible-on-lg', 'pf-m-width-30'), // Last deployment\n// ];\n// const getMatchingEnvs = (envs: string[], desiredStatus: string) => (\n//   acc: string[],\n//   status: string,\n//   idx: number,\n// ): string[] =>\n//   desiredStatus === status\n//     ? [...acc, envs[idx]] // 1:1 between a status and an env\n//     : acc;\n// const GitOpsTableRow: React.FC<RowFunctionArgs<GitOpsAppGroupData>> = (props) => {\n//   const { obj: appGroup } = props;\n//   const {\n//     name,\n//     sync_status: syncStatuses = [],\n//     environments: envs,\n//     last_deployed: lastDeployed = [],\n//     repo_url: repoUrl,\n//   } = appGroup;\n//   const { t } = useTranslation();\n//   const syncedEnvs: string[] = syncStatuses.reduce(getMatchingEnvs(envs, 'Synced'), []);\n//   const outOfSyncEnvs: string[] = syncStatuses.reduce(getMatchingEnvs(envs, 'OutOfSync'), []);\n//   const unknownEnvs: string[] = syncStatuses.reduce(getMatchingEnvs(envs, 'Unknown'), []);\n//   const latestDeployedTime = lastDeployed.reduce(\n//     (leadingDeployedTime, deployedTime) =>\n//       leadingDeployedTime < deployedTime ? deployedTime : leadingDeployedTime,\n//     '',\n//   );\n//   const latestDeployedEnv = latestDeployedTime\n//     ? envs[lastDeployed.indexOf(latestDeployedTime)]\n//     : '';\n//   return (\n//     <>\n//       <TableData className={tableColumnClasses[0]}>\n//         <Link to={`/environments/${appGroup.name}/overview?url=${appGroup.repo_url}`} title={name}>\n//           {name}\n//         </Link>\n//       </TableData>\n//       <TableData className={classNames(tableColumnClasses[1])}>\n//         <ExternalLink href={repoUrl} additionalClassName={'co-break-all'}>\n//           <span style={{ marginRight: 'var(--pf-global--spacer--xs)' }}>\n//             {routeDecoratorIcon(repoUrl, 12, t)}\n//           </span>\n//           <span style={{ marginRight: 'var(--pf-global--spacer--xs)' }}>{repoUrl}</span>\n//         </ExternalLink>\n//       </TableData>\n//       <TableData className={classNames(tableColumnClasses[2], 'pf-u-text-nowrap')}>\n//         {syncStatuses.length > 0 ? (\n//           <Flex className=\"gop-gitops-syncStatus\">\n//             <GitOpsSyncFragment\n//               tooltip={syncedEnvs.map((env) => (\n//                 <Split className=\"gop-gitops-tooltip-text\" hasGutter key={`${name}-${env}`}>\n//                   <SplitItem>\n//                     <GreenCheckCircleIcon />\n//                   </SplitItem>\n//                   <SplitItem isFilled>{env}</SplitItem>\n//                   <SplitItem>{t('gitops-plugin~Synced')}</SplitItem>\n//                 </Split>\n//               ))}\n//               count={syncedEnvs.length}\n//               icon=\"check\"\n//             />\n//             <GitOpsSyncFragment\n//               tooltip={outOfSyncEnvs.map((env) => (\n//                 <Split className=\"gop-gitops-tooltip-text\" hasGutter key={`${name}-${env}`}>\n//                   <SplitItem>\n//                     <YellowExclamationTriangleIcon />\n//                   </SplitItem>\n//                   <SplitItem isFilled>{env}</SplitItem>\n//                   <SplitItem>{t('gitops-plugin~OutOfSync')}</SplitItem>\n//                 </Split>\n//               ))}\n//               count={outOfSyncEnvs.length}\n//               icon=\"exclamation\"\n//             />\n//             <GitOpsSyncFragment\n//               tooltip={unknownEnvs.map((env) => (\n//                 <Split className=\"gop-gitops-tooltip-text\" hasGutter key={`${name}-${env}`}>\n//                   <SplitItem>\n//                     <GrayUnknownIcon />\n//                   </SplitItem>\n//                   <SplitItem isFilled>{env}</SplitItem>\n//                   <SplitItem>{t('gitops-plugin~Unknown')}</SplitItem>\n//                 </Split>\n//               ))}\n//               count={unknownEnvs.length}\n//               icon=\"unknown\"\n//             />\n//           </Flex>\n//         ) : (\n//           <span>{envs.join(', ')}</span>\n//         )}\n//       </TableData>\n//       <TableData className={tableColumnClasses[3]}>\n//         {latestDeployedTime !== '' ? (\n//           <Flex>\n//             <FlexItem className=\"gop-gitops-lastDeploymentTime\" spacer={{ default: 'spacerXs' }}>\n//               <span>\n//                 <Timestamp timestamp={latestDeployedTime} />\n//               </span>\n//             </FlexItem>\n//             <FlexItem>({latestDeployedEnv})</FlexItem>\n//           </Flex>\n//         ) : (\n//           <span>-</span>\n//         )}\n//       </TableData>\n//     </>\n//   );\n// };\n// export default GitOpsTableRow;\n"],"names":[],"sourceRoot":""}