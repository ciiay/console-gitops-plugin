{"version":3,"file":"exposed-environments.82ffeaaa068999277a14.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAA+B;AAC/B,YAAY,iBAAiB;AAC7B,YAAY,oBAAoB;AAChC,YAAY,uBAAuB;AACnC,YAAY,mBAAmB;AACkF;AAC9D;AACK;AACxD,QAAQ,oBAAoB,EAAE,mBAAO,CAAC,mKAAsC;AAC5E,6BAA6B,mBAAO,CAAC,iLAAoD;AACzF,uBAAuB,SAAO;AAC9B,sBAAsB,0BAA0B;AAChD,eAAe,IAAI;AACnB,wCAAwC,2CAAc;AACtD,mGAAmG,MAAM;AACzG;AACA,KAAK;AACL,mGAAmG,aAAa;AAChH,YAAY,gDAAmB,UAAU,8BAA8B;AACvE,mCAAmC,gDAAmB,CAAC,2CAAc;AACrE,YAAY,gDAAmB;AAC/B;AACA;AACA;AACA,uCAAuC,gDAAmB,CAAC,2CAAc;AACzE,YAAY,gDAAmB,UAAU,oCAAoC;AAC7E,gBAAgB,gDAAmB,eAAe;AAClD,8BAA8B;AAC9B,2DAA2D;AAC3D,YAAY,gDAAmB,CAAC,yEAAoB;AACpD,gBAAgB,gDAAmB,CAAC,yEAAoB;AACxD,oBAAoB,gDAAmB,CAAC,oEAAe,IAAI,8EAA8E;AACzI,wBAAwB,gDAAmB,CAAC,iEAAiB;AAC7D,mCAAmC;AACnC,0CAA0C;AAC1C,sCAAsC;AACtC;AACA,uCAAuC;AACvC,8CAA8C;AAC9C,0CAA0C;AAC1C,0DAA0D;AAC1D,wBAAwB,gDAAmB,CAAC,0DAAK;AACjD,6BAA6B,gDAAmB,CAAC,2CAAc;AAC/D,gCAAgC,gDAAmB,CAAC,uDAAE,IAAI,eAAe;AACzE,oCAAoC,gDAAmB;AACvD,wCAAwC,gDAAmB;AAC3D,gCAAgC,gDAAmB,CAAC,uDAAE,IAAI,WAAW;AACrE,oCAAoC,gDAAmB;AACvD,gCAAgC,gDAAmB,CAAC,uDAAE;AACtD,gCAAgC,gDAAmB,CAAC,uDAAE;AACtD,yBAAyB;AACzB,YAAY,gDAAmB,UAAU;AACzC,+BAA+B;AAC/B,wBAAwB,qEAAiB,sBAAsB,uDAAc,4CAA4C,OAAO,gDAAmB,CAAC,yDAAgB,IAAI,8BAA8B;AACtM;AACA,iEAAe,UAAU,EAAC;;;;;;;;;;;ACvD1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://console-gitops-plugin/./components/list/GitOpsList.tsx","webpack://console-gitops-plugin/./components/list/ sync"],"sourcesContent":["import * as React from 'react';\n// import { useTranslation } from 'react-i18next';\n// import { Table, TextFilter } from '@console/internal/components/factory';\n// import { fuzzyCaseInsensitive } from '@console/internal/components/factory/table-filters';\n// import { VirtualizedTable } from '@openshift-console/dynamic-plugin-sdk';\nimport { TableComposable, Tbody, InnerScrollContainer, OuterScrollContainer, Td } from '@patternfly/react-table';\nimport GitOpsEmptyState from '../GitOpsEmptyState';\nimport { GitOpsTableHeader } from './GitOpsTableHeader';\nconst { Table, TextFilter } = require('@console/internal/components/factory');\nconst fuzzyCaseInsensitive = require('@console/internal/components/factory/table-filters');\nconst GitOpsTableRow = require;\nconst GitOpsList = ({ appGroups, emptyStateMsg }) => {\n    // const { t } = useTranslation();\n    const [textFilter, setTextFilter] = React.useState('');\n    const visibleItems = appGroups === null || appGroups === void 0 ? void 0 : appGroups.filter(({ name }) => {\n        return fuzzyCaseInsensitive(textFilter, name);\n    });\n    const hasSyncStatus = (appGroups === null || appGroups === void 0 ? void 0 : appGroups.some(({ sync_status }) => sync_status /* eslint-disable-line @typescript-eslint/camelcase */)) || false;\n    return (React.createElement(\"div\", { className: \"gop-gitops-list\" },\n        appGroups.map((a) => a && (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", null,\n                a.name,\n                \" \",\n                a.repo_url)))),\n        !emptyStateMsg && appGroups ? (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { className: \"co-m-pane__filter-row\" },\n                React.createElement(TextFilter, { value: textFilter, label: 'by name', \n                    // label={t('gitops-plugin~by name')}\n                    onChange: (val) => setTextFilter(val) })),\n            React.createElement(OuterScrollContainer, null,\n                React.createElement(InnerScrollContainer, null,\n                    React.createElement(TableComposable, { \"aria-label\": \"Applications table\", variant: \"compact\", isStickyHeader: true },\n                        React.createElement(GitOpsTableHeader\n                        // onSort={onSort}\n                        // sortDirection={activeSortDirection}\n                        // sortIndex={activeSortIndex}\n                        , { \n                            // onSort={onSort}\n                            // sortDirection={activeSortDirection}\n                            // sortIndex={activeSortIndex}\n                            hasSyncStatus: hasSyncStatus }),\n                        React.createElement(Tbody, null, appGroups.map(app => {\n                            (React.createElement(React.Fragment, null,\n                                React.createElement(Td, { key: app.name },\n                                    React.createElement(\"div\", null,\n                                        React.createElement(\"span\", null, app.name))),\n                                React.createElement(Td, { width: 10 },\n                                    React.createElement(\"div\", null, app.repo_url)),\n                                React.createElement(Td, null, app.sync_status),\n                                React.createElement(Td, null, app.last_deployed)));\n                        }))))),\n            React.createElement(Table, { data: visibleItems, \"aria-label\": 'Environments table', \n                // aria-label={t('gitops-plugin~Environments table')}\n                Header: GitOpsTableHeader(hasSyncStatus), Row: GitOpsTableRow, loaded: !emptyStateMsg, virtualize: true }))) : (React.createElement(GitOpsEmptyState, { emptyStateMsg: emptyStateMsg }))));\n};\nexport default GitOpsList;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./components/list sync recursive\";\nmodule.exports = webpackEmptyContext;"],"names":[],"sourceRoot":""}