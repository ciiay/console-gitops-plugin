apiVersion: v1
kind: Namespace
metadata:
  name: "${PLUGIN_NAME}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "${PLUGIN_NAME}"
  namespace: "${PLUGIN_NAME}"
  labels:
    app: "${PLUGIN_NAME}"
    app.kubernetes.io/component: "${PLUGIN_NAME}"
    app.kubernetes.io/instance: "${PLUGIN_NAME}"
    app.kubernetes.io/part-of: "${PLUGIN_NAME}"
    app.openshift.io/runtime-namespace: "${PLUGIN_NAME}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "${PLUGIN_NAME}"
  template:
    metadata:
      labels:
        app: "${PLUGIN_NAME}"
    spec:
      containers:
        - name: "${PLUGIN_NAME}"
          image: ${IMAGE}
          ports:
            - containerPort: 9001
              protocol: TCP
          imagePullPolicy: Always
          args:
            - "--ssl"
            - "--cert=/var/serving-cert/tls.crt"
            - "--key=/var/serving-cert/tls.key"
          volumeMounts:
            - name: console-serving-cert
              readOnly: true
              mountPath: /var/serving-cert
          env:
            - name: SEGMENT_KEY
              value:
      volumes:
        - name: console-serving-cert
          secret:
            secretName: console-serving-cert
            defaultMode: 420
      restartPolicy: Always
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.openshift.io/serving-cert-secret-name: console-serving-cert
  name: "${PLUGIN_NAME}"
  namespace: "${PLUGIN_NAME}"
  labels:
    app: "${PLUGIN_NAME}"
    app.kubernetes.io/component: "${PLUGIN_NAME}"
    app.kubernetes.io/instance: "${PLUGIN_NAME}"
    app.kubernetes.io/part-of: "${PLUGIN_NAME}"
spec:
  ports:
    - name: 9001-tcp
      protocol: TCP
      port: 9001
      targetPort: 9001
  selector:
    app: "${PLUGIN_NAME}"
  type: ClusterIP
  sessionAffinity: None
---
apiVersion: console.openshift.io/v1alpha1
kind: ConsolePlugin
metadata:
  name: "${PLUGIN_NAME}"
  annotations:
  console.openshift.io/use-i18n: "true"
  # console.openshift.io/default-i18next-namespace: "true"
spec:
  displayName: "Gitops Dynamic Plugin"
  service:
    name: "${PLUGIN_NAME}"
    namespace: "${PLUGIN_NAME}"
    port: 9001
    basePath: "/"
  proxy:
    - type: Service
      alias: gitops
      authorize: false
      service:
        name: applications
        namespace: openshift-gitops
        port: 8443
